volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}
  wise-task-db: {}

services:
  wise-task-db:
    image: postgres:15-alpine
    container_name: wise-task-db
    environment:
      - POSTGRES_PASSWORD=wise-task
      - POSTGRES_USER=wise-task
      - POSTGRES_DB=wise-task
    ports:
      - "5432:5432"
    volumes:
      - wise-task-db:/var/lib/postgresql/data
      - ./docker/postgres/init-scripts:/docker-entrypoint-initdb.d

  wise-task-graph:
    build:
      context: ../wise-task-graph
      dockerfile: Dockerfile
      tags:
        - 'wise-task-graph'
      args:
        - USERNAME=${USERNAME}
        - TOKEN=${TOKEN}
    image: 'wise-task-graph'
    depends_on:
      - wise-task-mongo
    container_name: wise-task-graph
    ports:
      - "6565:6565"
      - "8080:8080"
    environment:
      - MANAGEMENT_METRICS_ENABLE_PROCESS=false
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-plugin:
    build:
      context: ../wise-task-plugin
      dockerfile: Dockerfile
      args:
        - USERNAME=${USERNAME}
        - TOKEN=${TOKEN}
      tags:
        - 'wise-task-plugin'
    image: 'wise-task-plugin'
    depends_on:
      - wise-task-db
      - wise-task-graph
    container_name:  wise-task-plugin
    ports:
      - "6566:6566"
      - "8081:8081"
    environment:
      - MANAGEMENT_METRICS_ENABLE_PROCESS=false
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-profile:
    build:
      context: ../wise-task-profile
      dockerfile: Dockerfile
      args:
        - USERNAME=${USERNAME}
        - TOKEN=${TOKEN}
      tags:
        - 'wise-task-profile'
    image: 'wise-task-profile'
    depends_on:
      - wise-task-db
    container_name: wise-task-profile
    ports:
      - "8082:8082"
      - "6567:6567"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-task:
    build:
      context: ../wise-task-task
      dockerfile: Dockerfile
      args:
        - USERNAME=${USERNAME}
        - TOKEN=${TOKEN}
      tags:
        - 'wise-task-task'
    image: 'wise-task-task'
    depends_on:
      - wise-task-db
      - wise-task-graph
      - wise-task-plugin
    container_name: wise-task-task
    ports:
      - "6568:6568"
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - USERNAME=${USERNAME}
        - TOKEN=${TOKEN}
      tags:
        - 'wise-task-gateway'
    image: 'wise-task-gateway'
    depends_on:
      - wise-task-profile
      - wise-task-task
      - wise-task-plugin
      - wise-task-graph
    container_name: wise-task-gateway
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-event-adapter:
    build:
      context: ../wise-task-event-adapter
      dockerfile: Dockerfile
      tags:
        - 'wise-task-event-adapter'
    image: 'wise-task-event-adapter'
    container_name: wise-task-event-adapter
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-mongo:
    image: mongo:latest
    container_name: wise-task-mongo
    ports:
      - "27017:27017"

  tempo:
    image: grafana/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yml:/etc/tempo.yaml
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "3200:3200"
      - "9411:9411"  # Zipkin
      - "14268:14268" # Jaeger ingest
  loki:
    image: grafana/loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

  prometheus:
    image: prom/prometheus
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - loki
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  smtp:
    image: boky/postfix
    container_name: smtp-server
    restart: unless-stopped
    ports:
      - "25:25"
    environment:
      - SMTP_SERVER_HOSTNAME=localhost
      - SMTP_SERVER_DOMAIN=wisetask.ru
      - RELAY_NETWORKS=0.0.0.0/0
      - ALLOWED_SENDER_DOMAINS=wisetask.ru
      - LOG_TO_STDOUT=1
    hostname: mail

  grafana:
    image: grafana/grafana
    volumes:
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/dashboards:/etc/grafana/dashboards
      - ./docker/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_BASIC_ENABLED="false"
      - GF_AUTH_DISABLE_LOGIN_FORM="true"
      - GF_AUTH_DISABLE_SIGNOUT_MENU="true"
      - GF_AUTH_PROXY_ENABLED="true"
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - loki
      - prometheus
    ports:
      - "3000:3000"
