version: '3.7'

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}

services:

  smtp:
    image: boky/postfix
    container_name: smtp-server
    restart: unless-stopped
    ports:
      - "25:25"
    environment:
      - SMTP_SERVER_HOSTNAME=localhost
      - SMTP_SERVER_DOMAIN=wisetask.ru
      - RELAY_NETWORKS=0.0.0.0/0
      - ALLOWED_SENDER_DOMAINS=wisetask.ru
      - LOG_TO_STDOUT=1
    hostname: mail

  wise-task-graph:
    image: ghcr.io/terross/wise-task-graph:main
    depends_on:
      - wise-task-mongo
    container_name: wise-task-graph
    ports:
      - "6565:6565"
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-plugin:
    image: ghcr.io/terross/wise-task-plugin:main
    depends_on:
      - wise-task-db
      - wise-task-graph
    container_name:  wise-task-plugin
    ports:
      - "6566:6566"
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-profile:
    image: ghcr.io/terross/wise-task-profile:main
    depends_on:
      - wise-task-db
    container_name: wise-task-profile
    ports:
      - "8082:8082"
      - "6567:6567"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-task:
    image: ghcr.io/terross/wise-task-task:main
    depends_on:
      - wise-task-db
      - wise-task-graph
      - wise-task-plugin
    container_name: wise-task-task
    ports:
      - "6568:6568"
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-gateway:
    image: ghcr.io/terross/wise-task-gateway:main
    depends_on:
      - wise-task-plugin
      - wise-task-profile
      - wise-task-graph
      - wise-task-task
    container_name: wise-task-gateway
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-event-adapter:
    image: ghcr.io/terross/wise-task-event-adapter:main
    container_name: wise-task-event-adapter
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  wise-task-mongo:
    image: mongo:latest
    container_name: wise-task-mongo
    ports:
      - "27017:27017"

  wise-task-db:
    image: postgres:13.1-alpine
    container_name: wise-task-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=wise_task
      - POSTGRES_PASSWORD=wise_task

  tempo:
    image: grafana/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yml:/etc/tempo.yaml
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "9411:9411" # zipkin

  loki:
    image: grafana/loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

  prometheus:
    image: prom/prometheus
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - loki
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    volumes:
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/dashboards:/etc/grafana/dashboards
      - ./docker/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_BASIC_ENABLED="false"
      - GF_AUTH_DISABLE_LOGIN_FORM="true"
      - GF_AUTH_DISABLE_SIGNOUT_MENU="true"
      - GF_AUTH_PROXY_ENABLED="true"
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - loki
      - prometheus
    ports:
      - "3000:3000"
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 22181:2181
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    ports:
#      - 29092:29092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#
#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    depends_on:
#      - kafka
#    ports:
#      - 8180:8080
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
#      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#
#  druid-postgres:
#    container_name: druid-postgres
#    image: postgres:latest
#    ports:
#      - "5444:5432"
#    volumes:
#      - metadata_data:/var/lib/postgresql/data
#    environment:
#      - POSTGRES_PASSWORD=FoolishPassword
#      - POSTGRES_USER=druid
#      - POSTGRES_DB=druid
#
#  druid-coordinator:
#    image: apache/druid:27.0.0
#    container_name: druid-coordinator
#    volumes:
#      - druid_shared:/opt/shared
#      - coordinator_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - druid-postgres
#    ports:
#      - "8181:8081"
#    command:
#      - coordinator
#    env_file:
#      - environment
#
#  druid-broker:
#    image: apache/druid:27.0.0
#    container_name: druid-broker
#    volumes:
#      - broker_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - druid-postgres
#      - druid-coordinator
#    ports:
#      - "8182:8082"
#    command:
#      - broker
#    env_file:
#      - environment
#
#  druid-historical:
#    image: apache/druid:27.0.0
#    container_name: druid-historical
#    volumes:
#      - druid_shared:/opt/shared
#      - historical_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - druid-postgres
#      - druid-coordinator
#    ports:
#      - "8183:8083"
#    command:
#      - historical
#    env_file:
#      - environment
#
#  druid-middlemanager:
#    image: apache/druid:27.0.0
#    container_name: druid-middlemanager
#    volumes:
#      - druid_shared:/opt/shared
#      - middle_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - druid-postgres
#      - druid-coordinator
#    ports:
#      - "8091:8091"
#      - "8100-8105:8100-8105"
#    command:
#      - middleManager
#    env_file:
#      - environment
#
#  druid-router:
#    image: apache/druid:27.0.0
#    container_name: router
#    volumes:
#      - router_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - druid-postgres
#      - druid-coordinator
#    ports:
#      - "9999:8888"
#    command:
#      - router
#    env_file:
#      - environment